class ПавлоСавонюк:
    def __init__(self, ім_я=None, призвище=None, рік_народження=None):
        self.ім_я = ім_я if ім_я is not None else 'Павло'
        self.призвище = призвище if призвище is not None else 'Савонюк'
        self.рік_народження = рік_народження if рік_народження is not None else 2008

    def вирахувати_курс(self):
        # Вираховуємо курс, взявши за основу рік народження
        current_year = 2025  # Поточний рік
        age = current_year - self.рік_народження
        # Для прикладу, якщо курс - це вік на поточний рік
        return age

    def створити_список(self):
        # Створюємо список з іменем та призвищем
        return [self.ім_я, self.призвище]

людина = ПавлоСавонюк()
# Перевірка методу для вирахування курсу (вік)
вік = людина.вирахувати_курс()
print(f"Вік: {вік}")  # Має вивести 17 (2025 - 2008)
# Перевірка методу для створення списку
список = людина.створити_список()
print(f"Список: {список}")  # Має вивести ['Павло', 'Савонюк']

# Дочірній клас
class Студент(ПавлоСавонюк):
    def __init__(self, ім_я=None, призвище=None, рік_народження=None, спеціальність=None, коледж=None, середній_бал=None):
        super().__init__(ім_я, призвище, рік_народження)
        self.спеціальність = спеціальність if спеціальність is not None else 'Комп_ютерна інженерія'
        self.коледж = коледж if коледж is not None else 'ТФК ЛНТУ'
        self.середній_бал = середній_бал if середній_бал is not None else 4.5
        self._підготовка = "Середній рівень"  # захищений атрибут
        self.__студент_код = 123456  # приватний атрибут

    def _змінити_підготовку(self, новий_рівень):
        # Захищений метод для зміни рівня підготовки
        self._підготовка = новий_рівень

    def __приватний_метод(self):
        # Приватний метод, що працює з приватним атрибутом
        return f"Код студента: {self.__студент_код}"

    def вивести_студентські_дані(self):
        # Публічний метод для виведення студентських даних
        return f"Студент {self.ім_я} {self.призвище}, спеціальність: {self.спеціальність}, коледж: {self.коледж}, середній бал: {self.середній_бал}"

    def змінити_середній_бал(self, новий_бал):
        # Публічний метод для зміни середнього балу
        if 0 <= новий_бал <= 5:
            self.середній_бал = новий_бал
        else:
            print("Невірний середній бал!")

# Приклад використання:

# Створення об'єкта дочірнього класу
студент = Студент(ім_я='Павло', призвище='Савонюк', рік_народження=2008)

# Виведення студентських даних
print(студент.вивести_студентські_дані())

# Зміна середнього балу
студент.змінити_середній_бал(4.8)
print(f"Новий середній бал: {студент.середній_бал}")

# Використання захищеного методу для зміни рівня підготовки
студент._змінити_підготовку("Високий рівень")
print(f"Рівень підготовки: {студент._підготовка}")

# Спроба доступу до приватного методу (викликає помилку)
# print(студент.__приватний_метод())  # Це викликає AttributeError